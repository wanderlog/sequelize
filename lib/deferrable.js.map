{
  "version": 3,
  "sources": ["../src/deferrable.ts"],
  "sourcesContent": ["import type { AbstractQueryGenerator } from './dialects/abstract/query-generator.js';\nimport { classToInvokable } from './utils/index.js';\n\n/**\n * Can be used to\n * make foreign key constraints deferrable and to set the constaints within a\n * transaction. This is only supported in PostgreSQL.\n *\n * The foreign keys can be configured like this. It will create a foreign key\n * that will check the constraints immediately when the data was inserted.\n *\n * ```js\n * class MyModel extends Model {}\n * MyModel.init({\n *   foreign_id: {\n *     type: DataTypes.INTEGER,\n *     references: {\n *       model: OtherModel,\n *       key: 'id',\n *       deferrable: Sequelize.Deferrable.INITIALLY_IMMEDIATE\n *     }\n *   }\n * }, { sequelize });\n * ```\n *\n * The constraints can be configured in a transaction like this. It will\n * trigger a query once the transaction has been started and set the constraints\n * to be checked at the very end of the transaction.\n *\n * ```js\n * sequelize.transaction({\n *   deferrable: Sequelize.Deferrable.SET_DEFERRED\n * });\n * ```\n */\nexport class Deferrable {\n  static toString(queryGenerator: AbstractQueryGenerator) {\n    return new this().toString(queryGenerator);\n  }\n\n  toString(queryGenerator: AbstractQueryGenerator) {\n    return this.toSql(queryGenerator);\n  }\n\n  toSql(_queryGenerator: AbstractQueryGenerator) {\n    throw new Error('toSql implementation missing');\n  }\n\n  static readonly INITIALLY_DEFERRED = classToInvokable(class INITIALLY_DEFERRED extends Deferrable {\n    toSql() {\n      return 'DEFERRABLE INITIALLY DEFERRED';\n    }\n  });\n\n  static readonly INITIALLY_IMMEDIATE = classToInvokable(class INITIALLY_IMMEDIATE extends Deferrable {\n    toSql() {\n      return 'DEFERRABLE INITIALLY IMMEDIATE';\n    }\n  });\n\n  /**\n   * Will set the constraints to not deferred. This is the default in PostgreSQL and it make\n   * it impossible to dynamically defer the constraints within a transaction.\n   */\n  static readonly NOT = classToInvokable(class NOT extends Deferrable {\n    toSql() {\n      return 'NOT DEFERRABLE';\n    }\n  });\n\n  /**\n   * Will trigger an additional query at the beginning of a\n   * transaction which sets the constraints to deferred.\n   */\n  static readonly SET_DEFERRED = classToInvokable(class SET_DEFERRED extends Deferrable {\n    readonly #constraints: string[];\n\n    /**\n     * @param constraints An array of constraint names. Will defer all constraints by default.\n     */\n    constructor(constraints: string[]) {\n      super();\n      this.#constraints = constraints;\n    }\n\n    toSql(queryGenerator: AbstractQueryGenerator): string {\n      return queryGenerator.setDeferredQuery(this.#constraints);\n    }\n  });\n\n  /**\n   * Will trigger an additional query at the beginning of a\n   * transaction which sets the constraints to immediately.\n   */\n  static readonly SET_IMMEDIATE = classToInvokable(class SET_IMMEDIATE extends Deferrable {\n    readonly #constraints: string[];\n\n    /**\n     * @param constraints An array of constraint names. Will defer all constraints by default.\n     */\n    constructor(constraints: string[]) {\n      super();\n      this.#constraints = constraints;\n    }\n\n    toSql(queryGenerator: AbstractQueryGenerator): string {\n      return queryGenerator.setImmediateQuery(this.#constraints);\n    }\n  });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,mBAAiC;AAkC1B,MAAM,WAAW;AAAA,SACf,SAAS,gBAAwC;AACtD,WAAO,IAAI,KAAK,EAAE,SAAS,cAAc;AAAA,EAC3C;AAAA,EAEA,SAAS,gBAAwC;AAC/C,WAAO,KAAK,MAAM,cAAc;AAAA,EAClC;AAAA,EAEA,MAAM,iBAAyC;AAC7C,UAAM,IAAI,MAAM,8BAA8B;AAAA,EAChD;AAAA,SAEgB,qBAAqB,mCAAiB,MAAM,2BAA2B,WAAW;AAAA,IAChG,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAAA,SAEe,sBAAsB,mCAAiB,MAAM,4BAA4B,WAAW;AAAA,IAClG,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAAA,SAMe,MAAM,mCAAiB,MAAM,YAAY,WAAW;AAAA,IAClE,QAAQ;AACN,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAAA,SAMe,eAAe,mCAAiB,MAAM,qBAAqB,WAAW;AAAA,IAC3E;AAAA,IAKT,YAAY,aAAuB;AACjC,YAAM;AACN,0BAAoB;AAAA,IACtB;AAAA,IAEA,MAAM,gBAAgD;AACpD,aAAO,eAAe,iBAAiB,iBAAiB;AAAA,IAC1D;AAAA,EACF,CAAC;AAAA,SAMe,gBAAgB,mCAAiB,MAAM,sBAAsB,WAAW;AAAA,IAC7E;AAAA,IAKT,YAAY,aAAuB;AACjC,YAAM;AACN,0BAAoB;AAAA,IACtB;AAAA,IAEA,MAAM,gBAAgD;AACpD,aAAO,eAAe,kBAAkB,iBAAiB;AAAA,IAC3D;AAAA,EACF,CAAC;AACH;",
  "names": []
}
