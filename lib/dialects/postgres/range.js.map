{
  "version": 3,
  "sources": ["../../../src/dialects/postgres/range.js"],
  "sourcesContent": ["'use strict';\n\nconst _ = require('lodash');\n\nfunction stringifyRangeBound(bound) {\n  if (bound === null) {\n    return '';\n  }\n\n  if (bound === Number.POSITIVE_INFINITY || bound === Number.NEGATIVE_INFINITY) {\n    return bound.toString().toLowerCase();\n  }\n\n  return JSON.stringify(bound);\n}\n\nfunction parseRangeBound(bound, parseType) {\n  if (!bound) {\n    return null;\n  }\n\n  if (bound === 'infinity') {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  if (bound === '-infinity') {\n    return Number.NEGATIVE_INFINITY;\n  }\n\n  return parseType(bound);\n\n}\n\nexport function stringify(data) {\n  if (data === null) {\n    return null;\n  }\n\n  if (!Array.isArray(data)) {\n    throw new TypeError('range must be an array');\n  }\n\n  if (data.length === 0) {\n    return 'empty';\n  }\n\n  if (data.length !== 2) {\n    throw new Error('range array length must be 0 (empty) or 2 (lower and upper bounds)');\n  }\n\n  if (Object.prototype.hasOwnProperty.call(data, 'inclusive')) {\n    if (data.inclusive === false) {\n      data.inclusive = [false, false];\n    } else if (!data.inclusive) {\n      data.inclusive = [true, false];\n    } else if (data.inclusive === true) {\n      data.inclusive = [true, true];\n    }\n  } else {\n    data.inclusive = [true, false];\n  }\n\n  _.each(data, (value, index) => {\n    if (_.isObject(value)) {\n      if (Object.prototype.hasOwnProperty.call(value, 'inclusive')) {\n        data.inclusive[index] = Boolean(value.inclusive);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(value, 'value')) {\n        data[index] = value.value;\n      }\n    }\n  });\n\n  const lowerBound = stringifyRangeBound(data[0]);\n  const upperBound = stringifyRangeBound(data[1]);\n\n  return `${(data.inclusive[0] ? '[' : '(') + lowerBound},${upperBound}${data.inclusive[1] ? ']' : ')'}`;\n}\n\nexport function parse(value, parser) {\n  if (value === null) {\n    return null;\n  }\n\n  if (value === 'empty') {\n    return [];\n  }\n\n  // eslint-disable-next-line unicorn/prefer-string-slice -- TODO\n  let result = value\n    .substring(1, value.length - 1)\n    .split(',', 2);\n\n  if (result.length !== 2) {\n    return value;\n  }\n\n  result = result.map((item, index) => {\n    return {\n      value: parseRangeBound(item, parser),\n      inclusive: index === 0 ? value[0] === '[' : value[value.length - 1] === ']',\n    };\n  });\n\n  return result;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,IAAI,QAAQ,QAAQ;AAE1B,6BAA6B,OAAO;AAClC,MAAI,UAAU,MAAM;AAClB,WAAO;AAAA,EACT;AAEA,MAAI,UAAU,OAAO,qBAAqB,UAAU,OAAO,mBAAmB;AAC5E,WAAO,MAAM,SAAS,EAAE,YAAY;AAAA,EACtC;AAEA,SAAO,KAAK,UAAU,KAAK;AAC7B;AAEA,yBAAyB,OAAO,WAAW;AACzC,MAAI,CAAC,OAAO;AACV,WAAO;AAAA,EACT;AAEA,MAAI,UAAU,YAAY;AACxB,WAAO,OAAO;AAAA,EAChB;AAEA,MAAI,UAAU,aAAa;AACzB,WAAO,OAAO;AAAA,EAChB;AAEA,SAAO,UAAU,KAAK;AAExB;AAEO,mBAAmB,MAAM;AAC9B,MAAI,SAAS,MAAM;AACjB,WAAO;AAAA,EACT;AAEA,MAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,UAAM,IAAI,UAAU,wBAAwB;AAAA,EAC9C;AAEA,MAAI,KAAK,WAAW,GAAG;AACrB,WAAO;AAAA,EACT;AAEA,MAAI,KAAK,WAAW,GAAG;AACrB,UAAM,IAAI,MAAM,oEAAoE;AAAA,EACtF;AAEA,MAAI,OAAO,UAAU,eAAe,KAAK,MAAM,WAAW,GAAG;AAC3D,QAAI,KAAK,cAAc,OAAO;AAC5B,WAAK,YAAY,CAAC,OAAO,KAAK;AAAA,IAChC,WAAW,CAAC,KAAK,WAAW;AAC1B,WAAK,YAAY,CAAC,MAAM,KAAK;AAAA,IAC/B,WAAW,KAAK,cAAc,MAAM;AAClC,WAAK,YAAY,CAAC,MAAM,IAAI;AAAA,IAC9B;AAAA,EACF,OAAO;AACL,SAAK,YAAY,CAAC,MAAM,KAAK;AAAA,EAC/B;AAEA,IAAE,KAAK,MAAM,CAAC,OAAO,UAAU;AAC7B,QAAI,EAAE,SAAS,KAAK,GAAG;AACrB,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO,WAAW,GAAG;AAC5D,aAAK,UAAU,SAAS,QAAQ,MAAM,SAAS;AAAA,MACjD;AAEA,UAAI,OAAO,UAAU,eAAe,KAAK,OAAO,OAAO,GAAG;AACxD,aAAK,SAAS,MAAM;AAAA,MACtB;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,aAAa,oBAAoB,KAAK,EAAE;AAC9C,QAAM,aAAa,oBAAoB,KAAK,EAAE;AAE9C,SAAO,GAAI,MAAK,UAAU,KAAK,MAAM,OAAO,cAAc,aAAa,KAAK,UAAU,KAAK,MAAM;AACnG;AAEO,eAAe,OAAO,QAAQ;AACnC,MAAI,UAAU,MAAM;AAClB,WAAO;AAAA,EACT;AAEA,MAAI,UAAU,SAAS;AACrB,WAAO,CAAC;AAAA,EACV;AAGA,MAAI,SAAS,MACV,UAAU,GAAG,MAAM,SAAS,CAAC,EAC7B,MAAM,KAAK,CAAC;AAEf,MAAI,OAAO,WAAW,GAAG;AACvB,WAAO;AAAA,EACT;AAEA,WAAS,OAAO,IAAI,CAAC,MAAM,UAAU;AACnC,WAAO;AAAA,MACL,OAAO,gBAAgB,MAAM,MAAM;AAAA,MACnC,WAAW,UAAU,IAAI,MAAM,OAAO,MAAM,MAAM,MAAM,SAAS,OAAO;AAAA,IAC1E;AAAA,EACF,CAAC;AAED,SAAO;AACT;",
  "names": []
}
