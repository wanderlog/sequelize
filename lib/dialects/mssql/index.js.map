{
  "version": 3,
  "sources": ["../../../src/dialects/mssql/index.js"],
  "sourcesContent": ["'use strict';\n\nconst _ = require('lodash');\nconst { AbstractDialect } = require('../abstract');\nconst { MsSqlConnectionManager } = require('./connection-manager');\nconst { MsSqlQuery } = require('./query');\nconst { MsSqlQueryGenerator } = require('./query-generator');\nconst DataTypes = require('../../data-types').mssql;\nconst { MsSqlQueryInterface } = require('./query-interface');\n\nexport class MssqlDialect extends AbstractDialect {\n  static supports = _.merge(_.cloneDeep(AbstractDialect.supports), {\n    'DEFAULT VALUES': true,\n    'LIMIT ON UPDATE': true,\n    migrations: false,\n    returnValues: {\n      output: true,\n    },\n    schemas: true,\n    autoIncrement: {\n      identityInsert: true,\n      defaultValue: false,\n      update: false,\n    },\n    constraints: {\n      restrict: false,\n      default: true,\n    },\n    index: {\n      collate: false,\n      type: true,\n      using: false,\n      where: true,\n    },\n    NUMERIC: true,\n    tmpTableTrigger: true,\n  });\n\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new MsSqlConnectionManager(this, sequelize);\n    this.queryGenerator = new MsSqlQueryGenerator({\n      _dialect: this,\n      sequelize,\n    });\n    this.queryInterface = new MsSqlQueryInterface(\n      sequelize,\n      this.queryGenerator,\n    );\n  }\n}\n\n// SQL Server 2017 Express (version 14), minimum supported version, all the way\n// up to the most recent version. When increasing this version, remember to\n// update also the minimum version in the documentation at\n//   docs/manual/other-topics/dialect-specific-things.md\n// and set the relevant years for the mssql Docker images in the ci.yml file at\n//   .github/workflows/ci.yml\nMssqlDialect.prototype.defaultVersion = '14.0.1000';\nMssqlDialect.prototype.Query = MsSqlQuery;\nMssqlDialect.prototype.name = 'mssql';\nMssqlDialect.prototype.TICK_CHAR = '\"';\nMssqlDialect.prototype.TICK_CHAR_LEFT = '[';\nMssqlDialect.prototype.TICK_CHAR_RIGHT = ']';\nMssqlDialect.prototype.DataTypes = DataTypes;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,IAAI,QAAQ,QAAQ;AAC1B,MAAM,EAAE,oBAAoB,QAAQ,aAAa;AACjD,MAAM,EAAE,2BAA2B,QAAQ,sBAAsB;AACjE,MAAM,EAAE,eAAe,QAAQ,SAAS;AACxC,MAAM,EAAE,wBAAwB,QAAQ,mBAAmB;AAC3D,MAAM,YAAY,QAAQ,kBAAkB,EAAE;AAC9C,MAAM,EAAE,wBAAwB,QAAQ,mBAAmB;AAEpD,MAAM,qBAAqB,gBAAgB;AAAA,SACzC,WAAW,EAAE,MAAM,EAAE,UAAU,gBAAgB,QAAQ,GAAG;AAAA,IAC/D,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,cAAc;AAAA,MACZ,QAAQ;AAAA,IACV;AAAA,IACA,SAAS;AAAA,IACT,eAAe;AAAA,MACb,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,QAAQ;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACX,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,OAAO;AAAA,MACL,SAAS;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA,SAAS;AAAA,IACT,iBAAiB;AAAA,EACnB,CAAC;AAAA,EAED,YAAY,WAAW;AACrB,UAAM;AACN,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,uBAAuB,MAAM,SAAS;AACnE,SAAK,iBAAiB,IAAI,oBAAoB;AAAA,MAC5C,UAAU;AAAA,MACV;AAAA,IACF,CAAC;AACD,SAAK,iBAAiB,IAAI,oBACxB,WACA,KAAK,cACP;AAAA,EACF;AACF;AAQA,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,QAAQ;AAC/B,aAAa,UAAU,OAAO;AAC9B,aAAa,UAAU,YAAY;AACnC,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,kBAAkB;AACzC,aAAa,UAAU,YAAY;",
  "names": []
}
