{
  "version": 3,
  "sources": ["../../../src/dialects/mariadb/index.js"],
  "sourcesContent": ["'use strict';\n\nconst _ = require('lodash');\nconst { AbstractDialect } = require('../abstract');\nconst { MariaDbConnectionManager } = require('./connection-manager');\nconst { MariaDbQuery } = require('./query');\nconst { MariaDbQueryGenerator } = require('./query-generator');\nconst { MySqlQueryInterface } = require('../mysql/query-interface');\nconst DataTypes = require('../../data-types').mariadb;\n\nexport class MariaDbDialect extends AbstractDialect {\n  static supports = _.merge(\n    _.cloneDeep(AbstractDialect.supports),\n    {\n      'VALUES ()': true,\n      'LIMIT ON UPDATE': true,\n      lock: true,\n      forShare: 'LOCK IN SHARE MODE',\n      settingIsolationLevelDuringTransaction: false,\n      schemas: true,\n      inserts: {\n        ignoreDuplicates: ' IGNORE',\n        updateOnDuplicate: ' ON DUPLICATE KEY UPDATE',\n      },\n      index: {\n        collate: false,\n        length: true,\n        parser: true,\n        type: true,\n        using: 1,\n      },\n      constraints: {\n        dropConstraint: false,\n        check: false,\n      },\n      indexViaAlter: true,\n      indexHints: true,\n      NUMERIC: true,\n      GEOMETRY: true,\n      JSON: true,\n      REGEXP: true,\n    },\n  );\n\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new MariaDbConnectionManager(this, sequelize);\n    this.queryGenerator = new MariaDbQueryGenerator({\n      _dialect: this,\n      sequelize,\n    });\n    this.queryInterface = new MySqlQueryInterface(\n      sequelize,\n      this.queryGenerator,\n    );\n  }\n}\n\nMariaDbDialect.prototype.defaultVersion = '10.1.44'; // minimum supported version\nMariaDbDialect.prototype.Query = MariaDbQuery;\nMariaDbDialect.prototype.QueryGenerator = MariaDbQueryGenerator;\nMariaDbDialect.prototype.DataTypes = DataTypes;\nMariaDbDialect.prototype.name = 'mariadb';\nMariaDbDialect.prototype.TICK_CHAR = '`';\nMariaDbDialect.prototype.TICK_CHAR_LEFT = MariaDbDialect.prototype.TICK_CHAR;\nMariaDbDialect.prototype.TICK_CHAR_RIGHT = MariaDbDialect.prototype.TICK_CHAR;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,MAAM,IAAI,QAAQ,QAAQ;AAC1B,MAAM,EAAE,oBAAoB,QAAQ,aAAa;AACjD,MAAM,EAAE,6BAA6B,QAAQ,sBAAsB;AACnE,MAAM,EAAE,iBAAiB,QAAQ,SAAS;AAC1C,MAAM,EAAE,0BAA0B,QAAQ,mBAAmB;AAC7D,MAAM,EAAE,wBAAwB,QAAQ,0BAA0B;AAClE,MAAM,YAAY,QAAQ,kBAAkB,EAAE;AAEvC,MAAM,uBAAuB,gBAAgB;AAAA,SAC3C,WAAW,EAAE,MAClB,EAAE,UAAU,gBAAgB,QAAQ,GACpC;AAAA,IACE,aAAa;AAAA,IACb,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,wCAAwC;AAAA,IACxC,SAAS;AAAA,IACT,SAAS;AAAA,MACP,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,IACrB;AAAA,IACA,OAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,aAAa;AAAA,MACX,gBAAgB;AAAA,MAChB,OAAO;AAAA,IACT;AAAA,IACA,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,EACV,CACF;AAAA,EAEA,YAAY,WAAW;AACrB,UAAM;AACN,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,yBAAyB,MAAM,SAAS;AACrE,SAAK,iBAAiB,IAAI,sBAAsB;AAAA,MAC9C,UAAU;AAAA,MACV;AAAA,IACF,CAAC;AACD,SAAK,iBAAiB,IAAI,oBACxB,WACA,KAAK,cACP;AAAA,EACF;AACF;AAEA,eAAe,UAAU,iBAAiB;AAC1C,eAAe,UAAU,QAAQ;AACjC,eAAe,UAAU,iBAAiB;AAC1C,eAAe,UAAU,YAAY;AACrC,eAAe,UAAU,OAAO;AAChC,eAAe,UAAU,YAAY;AACrC,eAAe,UAAU,iBAAiB,eAAe,UAAU;AACnE,eAAe,UAAU,kBAAkB,eAAe,UAAU;",
  "names": []
}
