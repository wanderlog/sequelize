{
  "version": 3,
  "sources": ["../../src/utils/dialect.ts"],
  "sourcesContent": ["import isPlainObject from 'lodash/isPlainObject';\n// eslint-disable-next-line import/order -- caused by temporarily mixing require with import\nimport { v1 as uuidv1, v4 as uuidv4 } from 'uuid';\n\nconst DataTypes = require('../data-types');\n\nconst dialectsSupportingMilliseconds = new Set([\n  'mariadb',\n  'mysql',\n  'postgres',\n  'sqlite',\n  'mssql',\n  'db2',\n  'ibmi',\n]);\n\n// TODO: instead of receiving a dialect *name* here, require the actual AbstractDialect subclass\n//  and add a flag on AbstractDialect.supports to determine if the date should include milliseconds.\nexport function now(dialect: string): Date {\n  const d = new Date();\n  if (!dialectsSupportingMilliseconds.has(dialect)) {\n    d.setMilliseconds(0);\n  }\n\n  return d;\n}\n\nexport function toDefaultValue(value: unknown, dialect: string): unknown {\n  if (typeof value === 'function') {\n    const tmp = value();\n    if (tmp instanceof DataTypes.ABSTRACT) {\n      return tmp.toSql();\n    }\n\n    return tmp;\n  }\n\n  if (value instanceof DataTypes.UUIDV1) {\n    return uuidv1();\n  }\n\n  if (value instanceof DataTypes.UUIDV4) {\n    return uuidv4();\n  }\n\n  if (value instanceof DataTypes.NOW) {\n    return now(dialect);\n  }\n\n  if (Array.isArray(value)) {\n    return [...value];\n  }\n\n  if (isPlainObject(value)) {\n    return { ...(value as object) };\n  }\n\n  return value;\n}\n\n// Note: Use the `quoteIdentifier()` and `escape()` methods on the\n// `QueryInterface` instead for more portable code.\nexport const TICK_CHAR = '`';\n\nexport function addTicks(s: string, tickChar: string = TICK_CHAR): string {\n  return tickChar + removeTicks(s, tickChar) + tickChar;\n}\n\nexport function removeTicks(s: string, tickChar: string = TICK_CHAR): string {\n  return s.replace(new RegExp(tickChar, 'g'), '');\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B;AAE1B,kBAA2C;AAE3C,MAAM,YAAY,QAAQ,eAAe;AAEzC,MAAM,iCAAiC,oBAAI,IAAI;AAAA,EAC7C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAIM,aAAa,SAAuB;AACzC,QAAM,IAAI,IAAI,KAAK;AACnB,MAAI,CAAC,+BAA+B,IAAI,OAAO,GAAG;AAChD,MAAE,gBAAgB,CAAC;AAAA,EACrB;AAEA,SAAO;AACT;AAEO,wBAAwB,OAAgB,SAA0B;AACvE,MAAI,OAAO,UAAU,YAAY;AAC/B,UAAM,MAAM,MAAM;AAClB,QAAI,eAAe,UAAU,UAAU;AACrC,aAAO,IAAI,MAAM;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AAEA,MAAI,iBAAiB,UAAU,QAAQ;AACrC,WAAO,oBAAO;AAAA,EAChB;AAEA,MAAI,iBAAiB,UAAU,QAAQ;AACrC,WAAO,oBAAO;AAAA,EAChB;AAEA,MAAI,iBAAiB,UAAU,KAAK;AAClC,WAAO,IAAI,OAAO;AAAA,EACpB;AAEA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAO,CAAC,GAAG,KAAK;AAAA,EAClB;AAEA,MAAI,kCAAc,KAAK,GAAG;AACxB,WAAO,mBAAM;AAAA,EACf;AAEA,SAAO;AACT;AAIO,MAAM,YAAY;AAElB,kBAAkB,GAAW,WAAmB,WAAmB;AACxE,SAAO,WAAW,YAAY,GAAG,QAAQ,IAAI;AAC/C;AAEO,qBAAqB,GAAW,WAAmB,WAAmB;AAC3E,SAAO,EAAE,QAAQ,IAAI,OAAO,UAAU,GAAG,GAAG,EAAE;AAChD;",
  "names": []
}
